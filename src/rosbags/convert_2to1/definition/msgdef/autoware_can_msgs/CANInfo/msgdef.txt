Header header
string tm
int32 devmode
int32 drvcontmode
int32 drvoverridemode
int32 drvservo
int32 drivepedal
int32 targetpedalstr
int32 inputpedalstr
float64 targetveloc
float64 speed
int32 driveshift
int32 targetshift
int32 inputshift
int32 strmode
int32 strcontmode
int32 stroverridemode
int32 strservo
int32 targettorque
int32 torque
float64 angle
float64 targetangle
int32 bbrakepress
int32 brakepedal
int32 brtargetpedalstr
int32 brinputpedalstr
float64 battery
int32 voltage
float64 anp
int32 battmaxtemparature
int32 battmintemparature
float64 maxchgcurrent
float64 maxdischgcurrent
float64 sideacc
float64 accellfromp
float64 anglefromp
float64 brakepedalfromp
float64 speedfr
float64 speedfl
float64 speedrr
float64 speedrl
float64 velocfromp2
int32 drvmode
int32 devpedalstrfromp
int32 rpm
float64 velocflfromp
int32 ev_mode
int32 temp
int32 shiftfrmprius
int32 light
int32 gaslevel
int32 door
int32 cluise

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id


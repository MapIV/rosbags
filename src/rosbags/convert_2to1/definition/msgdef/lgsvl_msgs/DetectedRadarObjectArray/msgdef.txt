std_msgs/Header header

lgsvl_msgs/DetectedRadarObject[] objects

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: lgsvl_msgs/DetectedRadarObject
int32 id

geometry_msgs/Vector3 sensor_aim
geometry_msgs/Vector3 sensor_right
geometry_msgs/Point sensor_position
geometry_msgs/Vector3 sensor_velocity
float64 sensor_angle

geometry_msgs/Point object_position
geometry_msgs/Vector3 object_velocity
geometry_msgs/Point object_relative_position
geometry_msgs/Vector3 object_relative_velocity
geometry_msgs/Vector3 object_collider_size
uint8 object_state
bool new_detection

uint8 STATE_MOVING = 0
uint8 STATE_STATIONARY = 1

================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 
# It is only meant to represent a direction. Therefore, it does not
# make sense to apply a translation to it (e.g., when applying a 
# generic rigid transformation to a Vector3, tf2 will only apply the
# rotation). If you want your data to be translatable too, use the
# geometry_msgs/Point message instead.

float64 x
float64 y
float64 z
================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

